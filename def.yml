--- 

profile: default
# Type of a service to maintain: PublicService creates public ELB,  PrivateService creates internal ELB
type: PublicService
version: 1

metadata:
  name: ball-app
  labels:
    - name: "datadog"
      value: "true"
    - name: "ecs"
      value: "false"
spec:

  # Container autoscaling
  scaling:
    min: 1
    desired: 1
    max: 2

  # Roles required
  iamRoles:
    - "ecsBasicRole" # Always added
    - "s3ReadAccess"
    - "ec2Defaults"

  # Shared volumes on ECS cluster
  volumes:
  - name:
    source:

  # Container definition
  containers:
  # Container for Nginx
  - name: rest-api
    image: mardle/rest-api-test # If image starts with "~/" - auto-detect service-specific registry URL
    essential: true # main container - if down, then restart all

    env:
    - name: "SERVER_PORT"
      value: "8080"

    ports:
    - containerPort: 8080 # Port EXPOSE
      port: 80            # ELB & ELB Target Group port (listener)
      protocol: "http"    # http or https
      name: "public"      # "_default_" if omited (may only be one unnamed port)

# Secondary ports are currently not supported. But if they were...
#    - containerPort: 8081 # Port EXPOSE
#      port: 81
#      protocol: "https"
#      name: "management"
# If Logs are needed in the future
#    logs:
#     log_driver: "gelf"
#      options:
#        gelf-address: "udp://crap.com:5212"
#        labels: "test"

    health:
      portName: "public" # defaults to "_default_"
      path: "/health"
      timeout: 10s
      interval: 5s
      healthyTh: 3
      unhealthyTh: 2

    volumes:  # Volume mounting
    - source_volume:
      container_path:

    resources:  # Resource limits
      cpu: 20
      memory: 2048

    links:  #Container links


  # Container for Redis
  - name: redis
    image: redis
    essential: false
    resources:
      memory: 128 # Units are parsed to be user friendly, no unit = MB

...
---

profile: production

spec:
  containers:
  - name: rest-api
    env:
    - name: "SERVER_PORT"
      value: 80
    - name: "SPRING_PROFILE"
      value: "production"
...
